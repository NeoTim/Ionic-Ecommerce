{"version":3,"sources":["../../src/pages/order-confirm/order-confirm.module.ts","../../src/services/user-service.ts","../../src/services/mock-users.ts","../../src/pages/order-confirm/order-confirm.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {OrderConfirmPage} from './order-confirm';\nimport {CartService} from '../../services/cart-service';\nimport {UserService} from '../../services/user-service';\n\n@NgModule({\n  declarations: [OrderConfirmPage],\n  imports: [\n  \tIonicPageModule.forChild(OrderConfirmPage)\n  ],\n  entryComponents: [\n  \tOrderConfirmPage\n  ],\n  providers: [\n    CartService,\n  \tUserService\n  ]\n})\nexport class OrderConfirmPageModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-confirm/order-confirm.module.ts","import {Injectable} from \"@angular/core\";\nimport {Http, Headers, RequestOptions} from \"@angular/http\";\nimport \"rxjs/add/operator/map\";\nimport 'rxjs/add/operator/mergeMap';\nimport {USERS} from \"./mock-users\";\nimport { ENV } from '@environment';\n\n@Injectable()\nexport class UserService {\n  private users: any;\n  public countries: any;\n\n  constructor(private http: Http) {\n    this.users = USERS;\n  }\n\n  getAll() {\n    return this.users;\n  }\n\n  checkEmail(email) {\n  \tlet headerProperties = {'Content-Type': 'application/json'};\n\tlet headers = new Headers(headerProperties);\n\tlet options = new RequestOptions({ headers: headers });  \n\tconst data = {\n\t\tcustomerEmail: email,\n\t\twebsiteId: 1\n\t}; \n\treturn this.http.post(ENV.API_ENDPOINT + 'customers/isEmailAvailable', data, options)\n\t.map(res => res.json())\n\t.toPromise();\n  }\n\n  isValidUser(email, pwd) {\n    return new Promise((resolve, reject) => {\n      let data = {\n        username: email,\n        password: pwd\n      };\n      let headerProperties = {'Content-Type': 'application/json'};\n      let headers = new Headers(headerProperties);\n      let options = new RequestOptions({ headers: headers });   \n      this.http.post(ENV.API_ENDPOINT + 'integration/customer/token', data, options)\n      .map(res => res.json())\n      .mergeMap(token => {\n        headerProperties['Authorization'] = 'Bearer ' + token;\n        let headers = new Headers(headerProperties);\n        let options = new RequestOptions({ headers: headers });\n        return this.http.get(ENV.API_ENDPOINT + 'customers/me', options)\n        .map(res => {\n          const user = res.json();\n          return {\n            token: token,\n            user: user\n          }\n        })\n      })\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  register(data) {\n    let headerProperties = {'Content-Type': 'application/json'};\n    let headers = new Headers(headerProperties);\n    let options = new RequestOptions({ headers: headers }); \n\treturn this.http.post(ENV.API_ENDPOINT + 'customers', data, options)\n\t.map(res => res.json())\n\t.toPromise();\n  }\n\n  callNextPage(customerToken, loading, nav, addressPage, orderPage) {\n    if(customerToken) {\n      this.getAddress(customerToken).then(data => {\n        loading.dismiss().then( () => {\n          if(data['addresses'] && data['addresses'].length === 0) {\n            nav.push(addressPage, {profile: data, modal: false});\n          } else {\n            nav.setRoot(orderPage, {address: data});\n          }\n        });\n      });\n    } else {\n\t  loading.dismiss().then( () => {\n      \tnav.setRoot(orderPage);\n      });\n    }\n  }\n\n  getProfile(customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return this.http.get(ENV.API_ENDPOINT + 'customers/me', options)\n    .map(res => res.json())\n    .toPromise();\n  }\n\n  updateProfile(data, customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(ENV.API_ENDPOINT + 'customers/me', data, options)\n    .map(res => res.json())\n    .toPromise();\n  }\n\n  getAddress(customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.get(ENV.API_ENDPOINT + 'customers/me', options)\n      .map(res => res.json())\n      .mergeMap(carts => {\n        return this.http.get(ENV.API_ENDPOINT + 'carts/mine', options)\n        .map(res => {\n          const data = res.json();\n          const shipping = data.extension_attributes.shipping_assignments[0].shipping.address;\n          let noNewAddress = 1;\n          if(shipping.country_id) {\n            const matchNewAddress = carts.addresses.map(item => {\n              return item.id;\n            }).indexOf(shipping.customer_address_id);\n            if(matchNewAddress === -1) {\n              carts.addresses.push(shipping);\n              noNewAddress = 0;\n            }\n          }\n          carts['noNewAddress'] = noNewAddress;\n          return carts;\n        })\n      })\n      .subscribe(data => {\n        data['selected'] = [];\n        if(data['addresses'].length > 0) {\n          data['selected'] = data['addresses'][0];\n        }\n        resolve(data);\n      },\n      err => reject(err));\n    });\n  }\n\n  getShippingMethods(countryId, customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    const data = {\n      address : {\n        countryId : countryId\n      }\n    };\n    return new Promise((resolve, reject) => {\n      return this.http.post(ENV.API_ENDPOINT + 'carts/mine/estimate-shipping-methods', data, options)\n      .map(res => res.json())\n      .subscribe(data => {\n          data['selected'] = data[0];\n          resolve(data);\n        },\n        err => reject(err)\n      );\n    });\n  }\n\n  saveBilling(data, customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.post(ENV.API_ENDPOINT + 'carts/mine/billing-address', data, options)\n      .map(res => res.json())\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  savePassword(customerToken, data) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(ENV.API_ENDPOINT + 'customers/me/password', data, options)\n    .map(res => res.json())\n    .toPromise();\n  }\n\n  saveAddresses(data, customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.post(ENV.API_ENDPOINT + 'customers/addresses/mine', data, options)\n      .map(res => res.json())\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  updateAddresses(data, customerToken, id) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.put(ENV.API_ENDPOINT + 'customers/addresses/mine/' + id, data, options)\n      .map(res => res.json())\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  placeOrder(data, customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.post(ENV.API_ENDPOINT + 'carts/mine/payment-information', data, options)\n      .map(res => res.json())\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  getCountries() {\n    if (this.countries) {\n      return Promise.resolve(this.countries);\n    }\n    let headers = new Headers({'Content-Type': 'application/json'});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.get(ENV.API_ENDPOINT + 'directory/countries', options)\n      .map(res => {\n        this.countries = res.json();\n        return this.countries;\n      })\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  checkoutShipping(data, customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.post(ENV.API_ENDPOINT + 'carts/mine/shipping-information', data, options)\n      .map(res => res.json())\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  getPaymentMethods(customerToken) {\n    let headers = new Headers({'Content-Type': 'application/json', 'Authorization': 'Bearer ' + customerToken});\n    let options = new RequestOptions({ headers: headers });\n    return new Promise((resolve, reject) => {\n      return this.http.get(ENV.API_ENDPOINT + 'carts/mine/payment-information', options)\n      .map(res => res.json())\n      .subscribe(\n        data => resolve(data),\n        err => reject(err)\n      );\n    });\n  }\n\n  getItem(id) {\n    for (var i = 0; i < this.users.length; i++) {\n      if (this.users[i].id === parseInt(id)) {\n        return this.users[i];\n      }\n    }\n    return null;\n  }\n\n  remove(item) {\n    this.users.splice(this.users.indexOf(item), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/user-service.ts","export let USERS = []\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/mock-users.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams, ModalController, Events, LoadingController, IonicPage} from 'ionic-angular';\nimport {Storage} from '@ionic/storage';\nimport {CartService} from '../../services/cart-service';\nimport {UserService} from '../../services/user-service';\nimport {ENV} from '@environment';\n\n\n@IonicPage({name: 'order-confirm'})\n@Component({\n  selector: 'page-order-confirm',\n  templateUrl: 'order-confirm.html'\n})\nexport class OrderConfirmPage {\n  public cart: any;\n  public totals: any;\n  public customerToken: any;\n  public address: any;\n  public shippingMethods: any;\n  public isShippingMethodUpdated: any;\n  public selectedShippingMethod: any;\n  public checkoutShipping: any;\n  public isAddressUpdated: any;\n  public noNewAddress: any;\n  public loading: any;\n  private currencySym: any;\n\n  constructor(public nav: NavController, public cartService: CartService, public navParams: NavParams, public storage: Storage, public modalCtrl: ModalController, public userService: UserService, public events: Events, public loadingCtrl: LoadingController) {\n    this.address = this.navParams.get('address');\n    // set cart data\n    this.cart = \"\";\n    this.totals = \"\";\n    this.shippingMethods = \"\";\n    this.selectedShippingMethod = \"\";\n    this.isShippingMethodUpdated = true;\n    this.isAddressUpdated = true;\n    this.currencySym = ENV.CURRENCY_SYMBOL;\n    this.checkoutShipping = {\n      addressInformation: {}\n    };\n    events.publish('carts-count');\n    events.subscribe('shipping-methods-countryid', (data, action) => {\n      if(data) {\n        this.shippingMethods = data;\n      }\n      this.isShippingMethodUpdated = action;\n    });\n    events.subscribe('add-new-shipping-address', (data) => {\n      this.address.noNewAddress = 0;\n      data['country_id'] = data['countryId'];\n      data['customer_id'] = data['customerId'];\n      data['save_in_address_book'] = data['saveInAddressBook'];\n      const region = {\n        'region_code': data['regionCode'],\n        'region_id': data['regionId'],\n        'region': data['region']\n      };\n      data['region'] = region;\n      this.address.addresses.push(data);\n      this.address.selected = data;\n    });\n  }\n\n  ionViewCanEnter(): Promise<boolean> {\n    return this.storage.get('customer_token').then(value => {\n      if(!value) {\n        setTimeout(()=>{    \n          this.nav.push('login', {goback: 'order-confirm', addAddress: 'modal-address-option'});\n        });\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n\n  ionViewDidLoad() {\n    this.storage.get('customer_token').then(value => {\n      if(value) {\n        this.customerToken = value;\n        if(localStorage.getItem('quoteId')) {\n          this.cartService.cartGuestToMine(value).then(data => {\n            localStorage.removeItem('quoteId');\n          });\n        }\n        this.isAddressUpdated = false;\n        this.getShippingAddress();\n      }\n    });\n  }\n\n  getShippingAddress() {\n    this.userService.getShippingMethods(this.address.selected.country_id, this.customerToken).then(data => {\n      this.shippingMethods = data;\n      this.isShippingMethodUpdated = false;\n    })\n  }\n\n  changeAddress(item) {\n    this.address.selected = item;\n    this.isShippingMethodUpdated = true;\n    this.userService.getShippingMethods(item.country_id, this.customerToken).then(data => {\n      this.shippingMethods = data;\n      this.isShippingMethodUpdated = false;\n    })\n  }\n\n  chooseShippingMethods(item) {\n    this.shippingMethods.selected = item; \n  }\n\n  showAddress() {\n    // show modal\n    const profile = {\n      id: this.address.id,\n      email: this.address.email,\n      firstname: this.address.firstname,\n      lastname: this.address.lastname\n    };\n    let modal = this.modalCtrl.create('modal-address-option', {profile: profile, modal: true, editType: 'editShipping', title : 'Shipping Address'});\n\n    // listen for modal close\n    modal.onDidDismiss(confirm => {\n      if (confirm) {\n        // apply filter here\n        console.log('hi');\n      } else {\n        // do nothing\n      }\n    });\n\n    modal.present();\n  }\n\n  // place order\n  buy() {\n    this.loading = this.loadingCtrl.create();\n    this.loading.present();\n    const shipping = this.shippingMethods.selected;\n    const address = this.address.selected;\n    const save = this.checkoutShipping.addressInformation;\n    save['shippingAddress'] = {};\n    save['billingAddress'] = {};\n    const data = {\n      \"region\": address.region.region,\n      \"regionId\": address.region.region_id,\n      \"regionCode\": address.region.region_code,\n      \"countryId\": address.country_id,\n      \"street\": address.street,\n      \"company\": address.company,\n      \"telephone\": address.telephone,\n      \"postcode\": address.postcode,\n      \"city\": address.city,\n      \"firstname\": address.firstname,\n      \"lastname\": address.lastname,\n      \"customerId\": address.customer_id,\n      \"email\": this.address.email,\n      \"save_in_address_book\": (address.save_in_address_book ? address.save_in_address_book : 0)\n    };\n    Object.assign(save['shippingAddress'], data);\n    Object.assign(save['billingAddress'], data);\n    save['shippingAddress']['sameAsBilling'] = 1;\n    if(address.id) {\n      save['shippingAddress']['customerAddressId'] = address.id;\n      save['billingAddress']['customerAddressId'] = address.id;\n    }\n    save['shippingMethodCode'] = shipping.method_code;\n    save['shippingCarrierCode'] = shipping.carrier_code;\n    this.userService.checkoutShipping(this.checkoutShipping, this.customerToken).then(data => {\n      this.loading.dismiss().then( () => {\n        this.nav.push('payment-method', {billing: save.billingAddress});\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-confirm/order-confirm.ts"],"sourceRoot":""}